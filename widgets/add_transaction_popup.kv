#:import get_color utils.theme.get_color
#:import dp kivy.metrics.dp

<AddTransactionPopup>:
    size_hint: 0.9, 0.7
    auto_dismiss: False
    background_color: [0,0,0,0] # Make ModalView background transparent

    BoxLayout:
        orientation: 'vertical'
        padding: dp(20)
        spacing: dp(15)
        canvas.before:
            Color:
                rgba: get_color(app.theme, "bg_color")
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [dp(10)] # Rounded corners

        Label:
            text: "Add New Transaction"
            font_size: '20sp'
            size_hint_y: None
            height: self.texture_size[1] + dp(10) # Add padding
            color: get_color(app.theme, "text_color")
            bold: True
            padding_y: dp(10)

        TextInput:
            id: amount_input
            hint_text: "Amount"
            multiline: False
            input_filter: "float"
            size_hint_y: None
            height: dp(40)
            background_color: get_color(app.theme, "secondary_color")
            foreground_color: get_color(app.theme, "text_color")
            cursor_color: get_color(app.theme, "primary_color")
            padding: [dp(10), (self.height - self.line_height)/2] # Center text vertically

        TextInput:
            id: description_input
            hint_text: "Description"
            multiline: False
            size_hint_y: None
            height: dp(40)
            background_color: get_color(app.theme, "secondary_color")
            foreground_color: get_color(app.theme, "text_color")
            cursor_color: get_color(app.theme, "primary_color")
            padding: [dp(10), (self.height - self.line_height)/2] # Center text vertically

        Spinner:
            id: currency_spinner
            text: "Select Currency"
            values: ["USD", "INR", "EUR", "GBP", "JPY"]
            size_hint_y: None
            height: dp(40)
            background_color: get_color(app.theme, "secondary_color")
            color: get_color(app.theme, "text_color") if self.text != "Select Currency" else get_color(app.theme, "text_color")[:3] + [0.5] # Hint color
            option_cls: 'SpinnerOption' # Use custom option class if needed for styling dropdown

        Spinner:
            id: type_spinner
            text: "Select Type"
            values: ["Credit", "Debit"]
            size_hint_y: None
            height: dp(40)
            background_color: get_color(app.theme, "secondary_color")
            color: get_color(app.theme, "text_color") if self.text != "Select Type" else get_color(app.theme, "text_color")[:3] + [0.5] # Hint color
            option_cls: 'SpinnerOption'

        Label:
            id: error_label
            text: root.error_message
            color: get_color(app.theme, "error_color")
            size_hint_y: None
            height: self.texture_size[1] if root.error_message else 0
            padding_y: dp(5)

        BoxLayout: # Buttons layout
            size_hint_y: None
            height: dp(50)
            spacing: dp(10)
            Button:
                text: "Add"
                background_color: get_color(app.theme, "primary_color")
                color: get_color(app.theme, "button_text")
                background_normal: ''
                background_down: ''
                canvas.before:
                    Color:
                        rgba: get_color(app.theme, "primary_color") if self.state == 'normal' else [c*0.8 for c in get_color(app.theme, "primary_color")[:3]] + [1]
                    RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [dp(5)]
                on_press: root.submit_transaction()
            Button:
                text: "Cancel"
                background_color: get_color(app.theme, "secondary_color")
                color: get_color(app.theme, "text_color")
                background_normal: ''
                background_down: ''
                canvas.before:
                    Color:
                        rgba: get_color(app.theme, "secondary_color") if self.state == 'normal' else [c*0.8 for c in get_color(app.theme, "secondary_color")[:3]] + [1]
                    RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [dp(5)]
                on_press: root.dismiss()

# Optional: Style the dropdown options for Spinners
<SpinnerOption>: # Corrected: Removed '@SpinnerOption'
    background_color: get_color(app.theme, "secondary_color")
    color: get_color(app.theme, "text_color")
    height: dp(40)