#:import get_color utils.theme.get_color
#:import dp kivy.metrics.dp

<LoginScreen>:
    canvas.before:
        Color:
            rgba: get_color(app.theme, "bg_color")
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: 'vertical'
        padding: dp(40)
        spacing: dp(20)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        size_hint: 0.8, 0.5
        # Add a background for the login box itself for contrast
        canvas.before:
            Color:
                rgba: get_color(app.theme, "secondary_color")[:3] + [0.8] # Slightly transparent secondary
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [dp(10)]

        Label:
            text: "Money Tracker"
            font_size: '32sp'
            size_hint_y: None
            height: self.texture_size[1] + dp(10) # Add padding
            color: get_color(app.theme, "text_color")
            bold: True

        TextInput:
            id: password_input
            hint_text: "Password"
            password: True
            multiline: False
            size_hint_y: None
            height: dp(40)
            background_color: get_color(app.theme, "bg_color") # Use main bg for input
            foreground_color: get_color(app.theme, "text_color")
            cursor_color: get_color(app.theme, "primary_color")
            padding: [dp(10), (self.height - self.line_height)/2] # Center text vertically

        Label:
            text: root.error_message
            color: get_color(app.theme, "error_color")
            size_hint_y: None
            height: self.texture_size[1] if root.error_message else 0
            padding_y: dp(5)

        Button:
            text: "Login"
            size_hint_y: None
            height: dp(50)
            background_color: get_color(app.theme, "primary_color")
            color: get_color(app.theme, "button_text")
            # Add visual feedback for press (optional)
            background_normal: '' # Needed to show background_color
            background_down: '' # Needed to show background_color
            canvas.before:
                Color:
                    rgba: get_color(app.theme, "primary_color") if self.state == 'normal' else [c*0.8 for c in get_color(app.theme, "primary_color")[:3]] + [1] # Darken on press
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [dp(5)]
            on_press: root.check_password()