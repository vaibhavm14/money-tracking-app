#:import get_color utils.theme.get_color
#:import dp kivy.metrics.dp

<AnalysisScreen>:
    canvas.before:
        Color:
            rgba: get_color(app.theme, "bg_color")
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: 'vertical'
        padding: dp(10)
        spacing: dp(10)

        BoxLayout: # Header with Back button
            size_hint_y: None
            height: dp(50)
            Button:
                text: '< Back'
                size_hint_x: None
                width: dp(80)
                background_color: get_color(app.theme, "secondary_color")
                color: get_color(app.theme, "text_color")
                background_normal: ''
                background_down: ''
                canvas.before:
                    Color:
                        rgba: get_color(app.theme, "secondary_color") if self.state == 'normal' else [c*0.8 for c in get_color(app.theme, "secondary_color")[:3]] + [1]
                    RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [dp(5)]
                on_press: root.go_back()
            Label:
                text: "Financial Analysis"
                font_size: '20sp'
                bold: True
                color: get_color(app.theme, "text_color")
                halign: 'center' # Center title

        ScrollView:
            bar_width: dp(10)
            bar_color: get_color(app.theme, "primary_color")[:3] + [0.7]
            BoxLayout:
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height
                spacing: dp(15)
                padding: dp(10)

                # Placeholder if plot is missing
                Label:
                    text: "Generating analysis..." if not root.plot_source and not root.stats else ("No data for analysis" if not root.plot_source else "")
                    size_hint_y: None
                    height: self.texture_size[1] if not root.plot_source else 0
                    color: get_color(app.theme, "text_color")[:3] + [0.7]
                    font_size: '16sp'
                    padding_y: dp(50)

                Image:
                    id: analysis_image
                    source: root.plot_source
                    allow_stretch: True
                    keep_ratio: True
                    size_hint_y: None
                    # Set height dynamically based on aspect ratio if needed, or fixed
                    height: dp(300) if root.plot_source else 0 # Hide if no source

                BoxLayout: # Statistics Section Wrapper
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height
                    spacing: dp(5)
                    # Only show stats if they exist
                    opacity: 1 if root.stats else 0
                    disabled: not root.stats

                    Label: # Statistics Title
                        text: "Statistics"
                        font_size: '18sp'
                        bold: True
                        size_hint_y: None
                        height: self.texture_size[1]
                        color: get_color(app.theme, "text_color")
                        padding_y: dp(10)

                    GridLayout: # Statistics Grid
                        cols: 2
                        size_hint_y: None
                        height: self.minimum_height
                        spacing: dp(10)

                        # Dynamically populated from root.stats
                        Label:
                            text: "Total Transactions:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Total Transactions", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: "Total Income:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Total Income", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: (0.1, 0.7, 0.1, 1) # Green
                        Label:
                            text: "Total Expenses:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Total Expenses", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: (0.9, 0.1, 0.1, 1) # Red
                        Label:
                            text: "Current Balance:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Current Balance", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            bold: True
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: "Avg Income Tx:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]
                        Label:
                            text: str(root.stats.get("Average Income Transaction", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]
                        Label:
                            text: "Avg Expense Tx:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]
                        Label:
                            text: str(root.stats.get("Average Expense Transaction", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]#:import get_color utils.theme.get_color
#:import dp kivy.metrics.dp

<AnalysisScreen>:
    canvas.before:
        Color:
            rgba: get_color(app.theme, "bg_color")
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: 'vertical'
        padding: dp(10)
        spacing: dp(10)

        BoxLayout: # Header with Back button
            size_hint_y: None
            height: dp(50)
            Button:
                text: '< Back'
                size_hint_x: None
                width: dp(80)
                background_color: get_color(app.theme, "secondary_color")
                color: get_color(app.theme, "text_color")
                background_normal: ''
                background_down: ''
                canvas.before:
                    Color:
                        rgba: get_color(app.theme, "secondary_color") if self.state == 'normal' else [c*0.8 for c in get_color(app.theme, "secondary_color")[:3]] + [1]
                    RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [dp(5)]
                on_press: root.go_back()
            Label:
                text: "Financial Analysis"
                font_size: '20sp'
                bold: True
                color: get_color(app.theme, "text_color")
                halign: 'center' # Center title

        ScrollView:
            bar_width: dp(10)
            bar_color: get_color(app.theme, "primary_color")[:3] + [0.7]
            BoxLayout:
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height
                spacing: dp(15)
                padding: dp(10)

                # Placeholder if plot is missing
                Label:
                    text: "Generating analysis..." if not root.plot_source and not root.stats else ("No data for analysis" if not root.plot_source else "")
                    size_hint_y: None
                    height: self.texture_size[1] if not root.plot_source else 0
                    color: get_color(app.theme, "text_color")[:3] + [0.7]
                    font_size: '16sp'
                    padding_y: dp(50)

                Image:
                    id: analysis_image
                    source: root.plot_source
                    allow_stretch: True
                    keep_ratio: True
                    size_hint_y: None
                    # Set height dynamically based on aspect ratio if needed, or fixed
                    height: dp(300) if root.plot_source else 0 # Hide if no source

                BoxLayout: # Statistics Section Wrapper
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height
                    spacing: dp(5)
                    # Only show stats if they exist
                    opacity: 1 if root.stats else 0
                    disabled: not root.stats

                    Label: # Statistics Title
                        text: "Statistics"
                        font_size: '18sp'
                        bold: True
                        size_hint_y: None
                        height: self.texture_size[1]
                        color: get_color(app.theme, "text_color")
                        padding_y: dp(10)

                    GridLayout: # Statistics Grid
                        cols: 2
                        size_hint_y: None
                        height: self.minimum_height
                        spacing: dp(10)

                        # Dynamically populated from root.stats
                        Label:
                            text: "Total Transactions:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Total Transactions", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: "Total Income:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Total Income", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: (0.1, 0.7, 0.1, 1) # Green
                        Label:
                            text: "Total Expenses:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Total Expenses", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: (0.9, 0.1, 0.1, 1) # Red
                        Label:
                            text: "Current Balance:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: str(root.stats.get("Current Balance", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            bold: True
                            color: get_color(app.theme, "text_color")
                        Label:
                            text: "Avg Income Tx:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]
                        Label:
                            text: str(root.stats.get("Average Income Transaction", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]
                        Label:
                            text: "Avg Expense Tx:"
                            halign: 'left'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]
                        Label:
                            text: str(root.stats.get("Average Expense Transaction", "N/A"))
                            halign: 'right'
                            text_size: self.width, None
                            color: get_color(app.theme, "text_color")[:3] + [0.7]